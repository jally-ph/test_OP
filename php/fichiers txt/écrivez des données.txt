09/02/2019

		ECRIVEZ DES DONNEES



		Insert / Update / Delete

**INSERT : ajouter des données**

on peut passer par phpmyadmin

mais par script php :

*la requête INSERT INTO permet d'ajouter une entrée*

pr ajouter une entrée faut connaître la requête SQL, par ex :
INSERT INTO jeux_video(ID, nom, possesseur, console, prix, nbre_joueurs_max, commentaires) 
VALUES('', 'Battlefield 1942', 'Patrick', 'PC', 45, 50, '2nde guerre mondiale')

INSERT INTO => on veut ajouter une entrée
+ le nom de la table
+ liste des champs où on veut mettre des infos
+ écrire VALUES
+ les valeurs à insérer dans le même ordre que celui des champs plus haut

ici ID = ' ' (apostrophes vides => car c'est en auto_increment, mysql donne un num de lui-même

on pourrait même ne pas écrire l'ID


*Application en PHP*

pas de QUERY(), on utilise : EXEC() => sert à appliquer des modifs dans bdd

// On ajoute une entrée dans la table jeux_video
$bdd->exec('INSERT INTO jeux_video(nom, possesseur, console, prix, nbre_joueurs_max, commentaires) VALUES(\'Battlefield 1942\', \'Patrick\', \'PC\', 45, 50, \'2nde guerre mondiale\')');

echo 'Le jeu a bien été ajouté !';

mais c'est plus rapide avec les requêtes préparées


*Insertion de données variables grâce à une requête préparée*

!! méthode recommandée si on veut mettre des variables !! même fonctionnemt que précédent: 

<?php
$req = $bdd->prepare('INSERT INTO jeux_video(nom, possesseur, console, prix, nbre_joueurs_max, commentaires) VALUES(:nom, :possesseur, :console, :prix, :nbre_joueurs_max, :commentaires)');
$req->execute(array(
	'nom' => $nom,
	'possesseur' => $possesseur,
	'console' => $console,
	'prix' => $prix,
	'nbre_joueurs_max' => $nbre_joueurs_max,
	'commentaires' => $commentaires
	));

echo 'Le jeu a bien été ajouté !';
?>

!!ne pas oublier de définir les $ : $nom, $possesseur...
généralement on reprend des formulaires issues de $_POST.





**UPDATE : modifier des données**

on écrit :
UPDATE jeux_video SET prix = 10, nbre_joueurs_max = 32 WHERE ID = 51


UPDATE => mot-clé, sert à modifier une entrée
+ le nom de la table
+ SET => mot clé qui sépare le nom de la table et la liste des champs à modifier
+ les champs à modifier, séparés par des virgules
+ leur nouvelle valeur
+ WHERE => mot-clé indispensable !! indique quelle entrée à modifier, sinon tout sera changé
(on se base très souvent sur l'ID, mais on peut le faire par le nom aussi)

UPDATE jeux_video SET prix = '10', nbre_joueurs_max = '32' WHERE nom = 'Battlefield 1942'


pour changer tous les champs indiquant possesseur Michel par Florent :

UPDATE jeux_video SET possesseur = 'Florent' WHERE possesseur = 'Michel'


*Application en PHP*

on fait tjours appel à exec() pr modifier :

<?php
$bdd->exec('UPDATE jeux_video SET prix = 10, nbre_joueurs_max = 32 WHERE nom = \'Battlefield 1942\'');
?>

pr récupérer le nbre de lignes modifiées, on récupère l'info dans une $ :

<?php
$nb_modifs = $bdd->exec('UPDATE jeux_video SET possesseur = \'Florent\' WHERE possesseur = \'Michel\'');
echo $nb_modifs . ' entrées ont été modifiées !';
?>


*Avec une requête préparée*

!! méthode recommandée si on met des données variables !!

<?php
$req = $bdd->prepare('UPDATE jeux_video SET prix = :nvprix, nbre_joueurs_max = :nv_nb_joueurs WHERE nom = :nom_jeu');
$req->execute(array(
	'nvprix' => $nvprix,
	'nv_nb_joueurs' => $nv_nb_joueurs,
	'nom_jeu' => $nom_jeu
	));
?>




**DELETE : supprimer des données**

!! Après suppression, aucun moyen de récupérer les données !!

ex:
DELETE FROM jeux_video WHERE nom='Battlefield 1942'

=> ça a supprimé tous les Battlefield 1942

DELETE FROM => supprimer dans
+ le nom de la table
+ WHERE => mot-clé : indique quelles entrées supprimer

!!!!!!!!!!!!!!!!!! sans WHERE toutes les entrées sont supprimés !!!!!!!!!!!!!!!

on peut utiliser exec() ou prepare() pr les requêtes préparées.




**Traiter les erreurs SQL**

Qd on a ça :
Fatal error: Call to a member function fetch() on a non-object

Cette erreur arrive qd on affiche une table avec : 
while ($donnees = $reponse->fetch())

L'erreur en vrai se trouve dans la requête MySql !


écrire :
<?php
$reponse = $bdd->query('SELECT nom FROM jeux_video') or die(print_r($bdd->errorInfo()));

si aucune erreur, la req fonctionnera; si erreur, php n'affichera pas la page et donnera
l'erreur donnée par mysql
ex: « You have an error in your SQL syntax near 'XXX' »







n12br => sert à garder les retours à la ligne saisies dans les formulaires.

:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::





















